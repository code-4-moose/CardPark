@page "/users/delete"
@using Microsoft.EntityFrameworkCore
@using ProjectCardPark1.Domain
@inject IDbContextFactory<ProjectCardPark1.Data.ProjectCardPark1Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<style>
    .btn-back {
        display: inline-block;
        background-color: #6c757d; /* Gray */
        color: white;
        text-decoration: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        transition: background 0.3s ease, transform 0.2s;
        margin-bottom: 15px;
    }

        .btn-back:hover {
            background-color: #5a6268; /* Slightly darker gray */
            transform: scale(1.05);
        }
</style>
<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>User</h2>
    <hr />
    @if (user is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@user.UserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@user.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@user.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Contact</dt>
            <dd class="col-sm-10">@user.Contact</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Stars</dt>
            <dd class="col-sm-10">@user.Stars</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RatingId</dt>
            <dd class="col-sm-10">@user.RatingId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ListingId</dt>
            <dd class="col-sm-10">@user.ListingId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@user.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@user.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@user.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@user.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="user" OnValidSubmit="DeleteUser" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(user is null)">Delete</button> |
            <a class="btn-back" href="/users">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private User? user;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        user = await context.User.FirstOrDefaultAsync(m => m.Id == Id);

        if (user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteUser()
    {
        using var context = DbFactory.CreateDbContext();
        var Listing = await context.Listing.ToListAsync();
        var Rating = await context.Rating.ToListAsync();
        var Report = await context.Report.ToListAsync();
        foreach (var list in Listing)
        {
            if (list.UserId == user.Id)
            {
                context.Listing.Remove(list);
            }
        }

        foreach (var rate in Rating)
        {
            if(rate.UserId == user.Id)
            {
                context.Rating.Remove(rate);
            }
            if(rate.CreatedBy == user.UserId)
            {
                context.Rating.Remove(rate);
            }
        }
        foreach(var rep in Report)
        {
            if(rep.UserId == user.Id)
            {
                context.Report.Remove(rep);
            }
        }

        context.User.Remove(user!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
